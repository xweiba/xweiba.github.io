{"title":"Angular中的指令","uid":"eaf20d8c0e78dfcdaa662d58c5894839","slug":"Angular中的指令","date":"2020-11-23T05:56:50.000Z","updated":"2025-04-30T08:11:18.830Z","comments":true,"path":"api/articles/Angular中的指令.json","keywords":null,"cover":null,"content":"<h2 id=\"14-Angular中的指令\"><a href=\"#14-Angular中的指令\" class=\"headerlink\" title=\"14.Angular中的指令\"></a><center>14.Angular中的指令</center></h2><h4 id=\"1-指令类型\"><a href=\"#1-指令类型\" class=\"headerlink\" title=\"1. 指令类型\"></a>1. 指令类型</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Angular 中有三种类型的指令  </p>\n<ol>\n<li>组件 — 拥有模板的指令</li>\n<li>结构型指令 — 通过添加和移除 DOM 元素改变 DOM 布局的指令</li>\n<li>属性型指令 — 改变元素、组件或其它指令的外观和行为的指令</li>\n</ol></blockquote>\n<h4 id=\"2-属性指令\"><a href=\"#2-属性指令\" class=\"headerlink\" title=\"2. 属性指令\"></a>2. 属性指令</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>创建指令: ng generate directive xxxxx</p></blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; Directive &#125; from &#x27;@angular/core&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">@Directive(&#123;</span><br><span class=\"line\">  selector: &#x27;[appHighlight]&#x27;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">export class HighlightDirective &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Input() highlightColor: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  constructor(el: ElementRef) &#123;</span><br><span class=\"line\">     el.nativeElement.style.backgroundColor = this.highlightColor;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  @HostListener(&#x27;mouseenter&#x27;) onMouseEnter() &#123;</span><br><span class=\"line\">    this.highlight(&#x27;yellow&#x27;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  @HostListener(&#x27;mouseleave&#x27;) onMouseLeave() &#123;</span><br><span class=\"line\">    this.highlight(null);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">el: ElementRef: ElementRef 通过其 nativeElement 属性给你了直接访问宿主 DOM 元素的能力。</span><br><span class=\"line\"></span><br><span class=\"line\">@Input(): 可以接收传递给指令的参数,不命名,默认和变量名称一样,也可以使用别名,即写成其他名字,如指令名,直接通过 [appHighlight]=&#x27;xxxx&#x27;,接收参数,并且可以写多个,来接收多个传入的参数</span><br><span class=\"line\"></span><br><span class=\"line\">@HostListener(): 让你订阅某个属性型指令所在的宿主 DOM 元素的事件</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-结构指令\"><a href=\"#3-结构指令\" class=\"headerlink\" title=\"3. 结构指令\"></a>3. 结构指令</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>结构指令的作用是:塑造或重塑 DOM 的结构，比如添加、移除或维护这些元素,<br> NgIf、NgFor和NgSwitch是常见的三个内置的结构型指令  </p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一个宿主元素上只能有一个结构型指令</p></blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">星号（*）前缀: 如*ngIf,星号是一个用来简化更复杂语法的“语法糖”。 从内部实现来说，Angular 把 *ngIf 属性 翻译成一个 &lt;ng-template&gt; 元素 并用它来包裹宿主元素</span><br><span class=\"line\"></span><br><span class=\"line\">实际解析代码如下:</span><br><span class=\"line\">&lt;ng-template [ngIf]=&quot;hero&quot;&gt;</span><br><span class=\"line\">  &lt;div class=&quot;name&quot;&gt;&#123;&#123;hero.name&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">&lt;/ng-template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import &#123; Directive, Input, TemplateRef, ViewContainerRef &#125; from &#x27;@angular/core&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Add the template content to the DOM unless the condition is true.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * If the expression assigned to `appUnless` evaluates to a truthy value</span><br><span class=\"line\"> * then the templated elements are removed removed from the DOM,</span><br><span class=\"line\"> * the templated elements are (re)inserted into the DOM.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;div *appUnless=&quot;errorCount&quot; class=&quot;success&quot;&gt;</span><br><span class=\"line\"> *   Congrats! Everything is great!</span><br><span class=\"line\"> * &lt;/div&gt;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ### Syntax</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * - `&lt;div *appUnless=&quot;condition&quot;&gt;...&lt;/div&gt;`</span><br><span class=\"line\"> * - `&lt;ng-template [appUnless]=&quot;condition&quot;&gt;&lt;div&gt;...&lt;/div&gt;&lt;/ng-template&gt;`</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">@Directive(&#123; selector: &#x27;[appUnless]&#x27;&#125;)</span><br><span class=\"line\">export class UnlessDirective &#123;</span><br><span class=\"line\">  private hasView = false;</span><br><span class=\"line\"></span><br><span class=\"line\">  constructor(</span><br><span class=\"line\">    private templateRef: TemplateRef&lt;any&gt;,</span><br><span class=\"line\">    private viewContainer: ViewContainerRef) &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Input() set appUnless(condition: boolean) &#123;</span><br><span class=\"line\">    if (!condition &amp;&amp; !this.hasView) &#123;</span><br><span class=\"line\">      this.viewContainer.createEmbeddedView(this.templateRef);</span><br><span class=\"line\">      this.hasView = true;</span><br><span class=\"line\">    &#125; else if (condition &amp;&amp; this.hasView) &#123;</span><br><span class=\"line\">      this.viewContainer.clear();</span><br><span class=\"line\">      this.hasView = false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Input、TemplateRef 和 ViewContainerRef，你在任何结构型指令中都会需要它们</span><br><span class=\"line\"></span><br><span class=\"line\">TemplateRef:取得&lt;ng-template&gt;的内容</span><br><span class=\"line\">ViewContainerRef:访问这个视图容器</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">该指令的使用者会把一个 true/false 条件绑定到 [appUnless] 属性上。 也就是说，该指令需要一个带有 @Input 的 appUnless 属性。</span><br><span class=\"line\">一旦该值的条件发生了变化，Angular 就会去设置 appUnless 属性。因为不能用 appUnless 属性，所以你要为它定义一个设置器（setter）。</span><br><span class=\"line\"></span><br><span class=\"line\">    1.如果条件为假，并且以前尚未创建过该视图，就告诉视图容器（ViewContainer）根据模板创建一个内嵌视图。</span><br><span class=\"line\"></span><br><span class=\"line\">    2.如果条件为真，并且视图已经显示出来了，就会清除该容器，并销毁该视图。</span><br><span class=\"line\"></span><br><span class=\"line\">没有人会读取 appUnless 属性，因此它不需要定义 getter。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","text":"14.Angular中的指令1. 指令类型 Angular 中有三种类型的指令 组件 — 拥有模板的指令 结构型指令 — 通过添加和移除 DOM 元素改变 DO...","permalink":"/post/Angular中的指令","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Angular","slug":"Angular","count":16,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":16,"path":"api/tags/Angular.json"},{"name":"指令","slug":"指令","count":1,"path":"api/tags/指令.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#14-Angular%E4%B8%AD%E7%9A%84%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">14.Angular中的指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%8C%87%E4%BB%A4%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">1. 指令类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%B1%9E%E6%80%A7%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">2. 属性指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E7%BB%93%E6%9E%84%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">3. 结构指令</span></a></li></ol></li></ol></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Angular中在Rxjs中并行处理多个Observable","uid":"853392868a1566344a3a7642bacafe28","slug":"Angular中在Rxjs中并行处理多个Observable","date":"2020-11-23T05:58:15.000Z","updated":"2025-04-30T08:11:18.830Z","comments":true,"path":"api/articles/Angular中在Rxjs中并行处理多个Observable.json","keywords":null,"cover":null,"text":"15.Rxjs中并行处理多个Observable1. forkJoin1234567let o1 = new Observable();let o2 = new...","permalink":"/post/Angular中在Rxjs中并行处理多个Observable","photos":[],"count_time":{"symbolsCount":545,"symbolsTime":"1 mins."},"categories":[{"name":"Angular","slug":"Angular","count":16,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":16,"path":"api/tags/Angular.json"},{"name":"Rxjs","slug":"Rxjs","count":1,"path":"api/tags/Rxjs.json"},{"name":"Observable","slug":"Observable","count":1,"path":"api/tags/Observable.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Angular中的打包部署","uid":"d4364c984cc79dd6b4a34500dd5c7bd3","slug":"Angular中的打包部署","date":"2020-11-23T05:55:58.000Z","updated":"2025-04-30T08:11:18.830Z","comments":true,"path":"api/articles/Angular中的打包部署.json","keywords":null,"cover":null,"text":"13.Angular中的打包部署1.打包指令12345ng build --base-href xx --prod--base-href:指定在生成和识别URL...","permalink":"/post/Angular中的打包部署","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Angular","slug":"Angular","count":16,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":16,"path":"api/tags/Angular.json"},{"name":"打包","slug":"打包","count":1,"path":"api/tags/打包.json"},{"name":"部署","slug":"部署","count":1,"path":"api/tags/部署.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}