{"title":"Java 排序","uid":"e9adcbc8532fce70420313e9114122dd","slug":"Java-排序","date":"2022-04-08T08:09:09.000Z","updated":"2025-04-30T08:11:18.852Z","comments":true,"path":"api/articles/Java-排序.json","keywords":null,"cover":null,"content":"<h2 id=\"通过指定-id-集排序\"><a href=\"#通过指定-id-集排序\" class=\"headerlink\" title=\"通过指定 id 集排序\"></a>通过指定 <code>id</code> 集排序</h2><p>在 <code>select * from table_name where id in ()</code> 的时候，<code>MySQL</code> 会自动按主键自增排序，要是按IN中给定的顺序来取，必须按 <code>Order by field()</code> 来实现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * from `models` where `id` in (111,222,333) order by field(id,111,222,333);</span><br></pre></td></tr></table></figure>\n\n<p>但该排序效率较低，可直接在代码中使用 <code>BeanComparator</code> 和 <code>FixedOrderComparator</code> 来实现对指定 <code>id</code> 集排序</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;XXX&gt; <span class=\"title function_\">getXxxByIds</span><span class=\"params\">(List&lt;String&gt; ids)</span> &#123;</span><br><span class=\"line\">    List&lt;XXX&gt; xXXs = xxxInfoDAO.selectByIds(ids);</span><br><span class=\"line\">    xXXs.sort(<span class=\"keyword\">new</span> <span class=\"title class_\">BeanComparator</span>(<span class=\"string\">&quot;id&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">FixedOrderComparator</span>(ids)));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> XXXs;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"通过指定 id 集排序在 select * from table_name where id in () 的时候，MySQL 会自动按主键自增排序，要是按IN中...","permalink":"/post/Java-排序","photos":[],"count_time":{"symbolsCount":499,"symbolsTime":"1 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[{"name":"排序","slug":"排序","count":1,"path":"api/tags/排序.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87%E6%8C%87%E5%AE%9A-id-%E9%9B%86%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">通过指定 id 集排序</span></a></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Spring MVC","uid":"84c6604e94d88eec227a0b74aad54f6e","slug":"Spring-MVC","date":"2022-04-21T08:32:36.000Z","updated":"2025-04-30T08:11:18.864Z","comments":true,"path":"api/articles/Spring-MVC.json","keywords":null,"cover":[],"text":"Spring MVC 流程图 ","permalink":"/post/Spring-MVC","photos":[],"count_time":{"symbolsCount":15,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Spring","slug":"Spring","count":8,"path":"api/tags/Spring.json"},{"name":"MVC","slug":"MVC","count":1,"path":"api/tags/MVC.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Spring AOP及事务原理","uid":"f4f28e159c970d8abf25ca9ece83bb73","slug":"Spring-AOP及事务原理","date":"2022-04-07T02:59:57.000Z","updated":"2025-04-30T08:11:18.863Z","comments":true,"path":"api/articles/Spring-AOP及事务原理.json","keywords":null,"cover":null,"text":"相关笔记@EnableAspectJAutoProxy(exposeProxy=true) 开启动态代理的暴露，因为在 JDK 动态代理模式下，在方法中调用本类...","permalink":"/post/Spring-AOP及事务原理","photos":[],"count_time":{"symbolsCount":205,"symbolsTime":"1 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[{"name":"事务","slug":"事务","count":2,"path":"api/tags/事务.json"},{"name":"AOP","slug":"AOP","count":1,"path":"api/tags/AOP.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}