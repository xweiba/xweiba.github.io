{"title":"Redis RDB 分析工具 rdbtools 的安装及使用","uid":"fdd954ec5bfb8f467c03ee2275680518","slug":"Redis RDB 分析工具 rdbtools 的安装及使用","date":"2020-08-21T05:17:02.000Z","updated":"2025-04-30T08:11:18.862Z","comments":true,"path":"api/articles/Redis RDB 分析工具 rdbtools 的安装及使用.json","keywords":null,"cover":null,"content":"<h1 id=\"安装-rdbtools\"><a href=\"#安装-rdbtools\" class=\"headerlink\" title=\"安装 rdbtools\"></a>安装 rdbtools</h1><p>该工具需要<code>python</code>支持, <code>2.7</code> 或 <code>3.4+</code> 都可以.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install rdbtools</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装相关依赖\"><a href=\"#安装相关依赖\" class=\"headerlink\" title=\"安装相关依赖\"></a>安装相关依赖</h1><p>在解析<code>redis</code>的<code>rbd</code>文件时, 需要安装 <code>python-lzf</code>, 否则解析会非常慢.</p>\n<p>在<code>Windows</code>环境下, 使用<code>pip</code>安装<code>python-lzf</code>时, 需要安装 <code>VC++</code> 依赖对源码进行编译, 而这个依赖极其难装… </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ps: <code>python 2.7</code> 需要<code>VC++ 9</code>, <code>python 3</code> 需要<code>VC++ 14</code>.</p></blockquote>\n<p>为避免浪费时间, 直接下载编译好的 <code>whl</code> 文件.</p>\n<p><code>whl</code>下载站: <a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml\">Python Extension Packages for Windows - Christoph Gohlke</a>, 打开后浏览器搜索 <code>python-lzf</code>, 定位到下载位置. </p>\n<p>根据你的系统版本和<code>python</code>版本下载对应的<code>whl</code>文件. <code>pytho3.7</code> <code>64</code>位<code>Windows</code>下载 <code>python_lzf‑0.2.4‑cp37‑cp37m‑win_amd64.whl</code> .</p>\n<p>下载完成后直接安装: <code>pip install python_lzf‑0.2.4‑cp37‑cp37m‑win_amd64.whl</code></p>\n<h1 id=\"下载rdb\"><a href=\"#下载rdb\" class=\"headerlink\" title=\"下载rdb\"></a>下载<code>rdb</code></h1><p>打开<code>redis</code>的配置文件, 搜索<code>dbfilename</code>, 查看<code>rdb</code>文件位置.</p>\n<p>如没有自动生成的话, 通过<code>redis-cli</code>登陆到<code>redis</code>终端执行<code>bgsave</code>, 会在后台异步保存当前数据库的数据到<code>rdb</code>文件.</p>\n<p>下载<code>rdb</code>文件至本地<code>dump.rdb</code>.</p>\n<h1 id=\"生成rdb的内存报告\"><a href=\"#生成rdb的内存报告\" class=\"headerlink\" title=\"生成rdb的内存报告\"></a>生成<code>rdb</code>的内存报告</h1><p>将<code>rdb</code>内容解析到<code>csv</code>表格中: <code>rdb -c memory dump.rdb -b 10240 -f dump_memory_v2.csv</code>.</p>\n<p>参数含义:<br><code>-c</code>: 该<code>rdb</code>保存的数据格式, <code>memory</code> 标识内存镜像, 还有<code>json</code>等等..<br><code>-b</code>: 使用多大的内存来缓冲解析数据, 分片的解析<code>rdb</code>数据, 防止内存占用过高.<br><code>-f</code>: 解析数据存放的文件位置</p>\n<p>生成完毕后可通过表格的排序找出内存占用比较大的<code>key</code>.</p>\n<h1 id=\"解析单个-key-值\"><a href=\"#解析单个-key-值\" class=\"headerlink\" title=\"解析单个 key 值\"></a>解析单个 <code>key</code> 值</h1><p>解析单个<code>key</code>的<code>value</code>到文件:<code>rdb --command json dump.rdb -k &quot;dataenable:router:push&quot; -b 1024 -f dump.json</code></p>\n<p>想命令行直接输出不要后面的 <code>-f dump.json</code> 就行了.</p>\n<p>当前这个<code>key</code>会生成9G左右的文件, 没一个编辑器打的开…</p>\n<p>这种情况咱们可以在运行命令后一两秒后 <code>ctrl + c</code> 就结束命令, 生成一个10M左右的文件. </p>\n<p>我们只需要看看数据结构就行了. </p>\n","text":"安装 rdbtools该工具需要python支持, 2.7 或 3.4+ 都可以. 1pip install rdbtools 安装相关依赖在解析redis的r...","permalink":"/post/Redis RDB 分析工具 rdbtools 的安装及使用","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":3,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":5,"path":"api/tags/Redis.json"},{"name":"rdbtools","slug":"rdbtools","count":1,"path":"api/tags/rdbtools.json"},{"name":"RDB","slug":"RDB","count":1,"path":"api/tags/RDB.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-rdbtools\"><span class=\"toc-text\">安装 rdbtools</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">安装相关依赖</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BDrdb\"><span class=\"toc-text\">下载rdb</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90rdb%E7%9A%84%E5%86%85%E5%AD%98%E6%8A%A5%E5%91%8A\"><span class=\"toc-text\">生成rdb的内存报告</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%9E%90%E5%8D%95%E4%B8%AA-key-%E5%80%BC\"><span class=\"toc-text\">解析单个 key 值</span></a></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Anacoda 常用命令","uid":"b27121b4fe504bb1cc2cc95693f47297","slug":"Anacoda 常用命令","date":"2020-09-09T06:03:40.000Z","updated":"2025-04-30T08:11:18.830Z","comments":true,"path":"api/articles/Anacoda 常用命令.json","keywords":null,"cover":null,"text":" activate xxx 激活环境 conda info –envs 查看所有环境 conda create -n tensorflow pip 创建一个 t...","permalink":"/post/Anacoda 常用命令","photos":[],"count_time":{"symbolsCount":384,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":7,"path":"api/categories/Python.json"}],"tags":[{"name":"Anacoda","slug":"Anacoda","count":4,"path":"api/tags/Anacoda.json"},{"name":"常用命令","slug":"常用命令","count":10,"path":"api/tags/常用命令.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"快速搭建 Python 3.6.2 + Keras 2.3.1 + Tensorflow 1.15 + OpenCV 环境","uid":"e1e6120a76350081feccd71d083f287c","slug":"快速搭建 Python 3.6.2 + Keras 2.3.1 + Tensorflow 1.15 + OpenCV 环境","date":"2020-08-20T06:04:29.000Z","updated":"2025-04-30T08:11:18.901Z","comments":true,"path":"api/articles/快速搭建 Python 3.6.2 + Keras 2.3.1 + Tensorflow 1.15 + OpenCV 环境.json","keywords":null,"cover":null,"text":"快速搭建环境 使用 Anacoda, 初始化环境Keras 与 Tensorflow 版本依赖关系: List of Available Environment...","permalink":"/post/快速搭建 Python 3.6.2 + Keras 2.3.1 + Tensorflow 1.15 + OpenCV 环境","photos":[],"count_time":{"symbolsCount":513,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":7,"path":"api/categories/Python.json"}],"tags":[{"name":"OpenCV","slug":"OpenCV","count":4,"path":"api/tags/OpenCV.json"},{"name":"Python","slug":"Python","count":7,"path":"api/tags/Python.json"},{"name":"环境","slug":"环境","count":4,"path":"api/tags/环境.json"},{"name":"Keras","slug":"Keras","count":1,"path":"api/tags/Keras.json"},{"name":"Tensorflow","slug":"Tensorflow","count":1,"path":"api/tags/Tensorflow.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}