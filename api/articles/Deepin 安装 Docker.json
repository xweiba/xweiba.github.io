{"title":"Deepin 安装 Docker","uid":"abb7b100693f257cce1f4583ac951898","slug":"Deepin 安装 Docker","date":"2019-08-12T03:34:46.000Z","updated":"2025-04-30T08:11:18.832Z","comments":true,"path":"api/articles/Deepin 安装 Docker.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>最近公司发布会由于是异地举行，被部署搞的很伤，连续加了几天班，大多都是因为运行环境问题，所以这次会后，领导准备全面使用<code>docker</code>，将整体服务容器化，后期使用自动部署解决这个问题。我们现在使用的是<code>Spring Cloud</code>，比较容易迁移，自己也一直想看看<code>docker</code>，在<code>deepin</code>上测试一下。</p></blockquote>\n<h1 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h1><p>根据<code>deepin</code>官方<code>wiki</code>安装即可： <a href=\"https://wiki.deepin.org/wiki/Docker\">Deepin安装Docker教程</a></p>\n<p><code>Docker</code> 详细文档：<a href=\"https://yeasy.gitbooks.io/docker_practice/\">Docker文档</a></p>\n<p><code>Docker</code> 仓库：<a href=\"https://store.docker.com/\">https://store.docker.com/</a><br><strong>要注意的地方：</strong></p>\n<ul>\n<li>添加<code>docker</code>仓库的时候，注意更换版本代号，因为<code>deepin</code>是基于<code>debian</code>的，所以改成<code>debian</code>的即可。我的<code>deepin</code>是<code>15.8</code>，<code>debian</code>版为<code>8.0</code>，版本号改为<code>jessie</code>即可。<br> 相关命令：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsb_release -cs</span><br><span class=\"line\">cat /etc/debian_version</span><br><span class=\"line\">sudo add-apt-repository  <span class=\"string\">&quot;deb [arch=amd64] https://download.docker.com/linux/debian jessie stable&quot;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"leanote://file/getImage?fileId=5c10bde675a1b808b200005b\" alt=\"命令\"></p>\n<p>之后就是更新仓库 <code>sudo apt-get update</code>， 安装<code>sudo apt-get install docker-ce</code> 。</p>\n<p>我没有按文档更改<code>docker.service的unit文件</code>，直接启动成功～</p>\n<ul>\n<li><p><code>systemctl start docker</code> - 开启<code>docker</code></p>\n</li>\n<li><p><code>docker version</code> - 查看<code>docker</code>版本<br><img src=\"leanote://file/getImage?fileId=5c10c2ff75a1b808b200005c\" alt=\"title\"></p>\n</li>\n<li><p>提示没有权限读取服务端信息使用<code>sudo docker version</code> 即可<br><img src=\"leanote://file/getImage?fileId=5c10c4ce75a1b808b200005d\" alt=\"title\"></p>\n</li>\n</ul>\n<h1 id=\"运行测试\"><a href=\"#运行测试\" class=\"headerlink\" title=\"运行测试\"></a>运行测试</h1><ul>\n<li><code>sudo docker run hello-world</code> 下载镜像并运行<br><img src=\"leanote://file/getImage?fileId=5c10c4f075a1b808b200005e\" alt=\"title\"></li>\n</ul>\n<h1 id=\"CentOS-RHEL-的用户需要注意的事项\"><a href=\"#CentOS-RHEL-的用户需要注意的事项\" class=\"headerlink\" title=\"CentOS&#x2F;RHEL 的用户需要注意的事项\"></a>CentOS&#x2F;RHEL 的用户需要注意的事项</h1><p>在 Ubuntu&#x2F;Debian 上有 UnionFS 可以使用，如 aufs 或者 overlay2，而 CentOS 和 RHEL 的内核中没有相关驱动。因此对于这类系统，一般使用 devicemapper 驱动利用 LVM 的一些机制来模拟分层存储。这样的做法除了性能比较差外，稳定性一般也不好，而且配置相对复杂。Docker 安装在 CentOS&#x2F;RHEL 上后，会默认选择 devicemapper，但是为了简化配置，其 devicemapper 是跑在一个稀疏文件模拟的块设备上，也被称为 loop-lvm。这样的选择是因为不需要额外配置就可以运行 Docker，这是自动配置唯一能做到的事情。但是 loop-lvm 的做法非常不好，其稳定性、性能更差，无论是日志还是 docker info 中都会看到警告信息。官方文档有明确的文章讲解了如何配置块设备给 devicemapper 驱动做存储层的做法，这类做法也被称为配置 direct-lvm。</p>\n<p>除了前面说到的问题外，devicemapper + loop-lvm 还有一个缺陷，因为它是稀疏文件，所以它会不断增长。用户在使用过程中会注意到 &#x2F;var&#x2F;lib&#x2F;docker&#x2F;devicemapper&#x2F;devicemapper&#x2F;data 不断增长，而且无法控制。很多人会希望删除镜像或者可以解决这个问题，结果发现效果并不明显。原因就是这个稀疏文件的空间释放后基本不进行垃圾回收的问题。因此往往会出现即使删除了文件内容，空间却无法回收，随着使用这个稀疏文件一直在不断增长。</p>\n<p>所以对于 CentOS&#x2F;RHEL 的用户来说，在没有办法使用 UnionFS 的情况下，一定要配置 direct-lvm 给 devicemapper，无论是为了性能、稳定性还是空间利用率。</p>\n<p>或许有人注意到了 CentOS 7 中存在被 backports 回来的 overlay 驱动，不过 CentOS 里的这个驱动达不到生产环境使用的稳定程度，所以不推荐使用。</p>\n","text":" 最近公司发布会由于是异地举行，被部署搞的很伤，连续加了几天班，大多都是因为运行环境问题，所以这次会后，领导准备全面使用docker，将整体服务容器化，后期使用...","permalink":"/post/Deepin 安装 Docker","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Docker","slug":"Docker","count":7,"path":"api/categories/Docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"deepin","slug":"deepin","count":1,"path":"api/tags/deepin.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Docker\"><span class=\"toc-text\">安装Docker</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">运行测试</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CentOS-RHEL-%E7%9A%84%E7%94%A8%E6%88%B7%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">CentOS&#x2F;RHEL 的用户需要注意的事项</span></a></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Docker 常用命令","uid":"a465c4657a75baece0af2cd4f6ae40c5","slug":"Docker 常用命令","date":"2019-08-12T03:35:42.000Z","updated":"2025-04-30T08:11:18.833Z","comments":true,"path":"api/articles/Docker 常用命令.json","keywords":null,"cover":[],"text":"#shell systemctl start docker - 启动 service docker restart - 重启 docker version - ...","permalink":"/post/Docker 常用命令","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"Docker","slug":"Docker","count":7,"path":"api/categories/Docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Docker 容器的底层实现（转载资料）","uid":"01b31d33e59784cdd89994ca196501a5","slug":"Docker 容器的底层实现（转载资料）","date":"2019-08-12T03:32:47.000Z","updated":"2025-04-30T08:11:18.832Z","comments":true,"path":"api/articles/Docker 容器的底层实现（转载资料）.json","keywords":null,"cover":[],"text":"写的非常详细，可以直接去原文看： Docker(1)底层实现 以下存档防止丢失～～ Docker底层实现Docker并没有传统虚拟化的Hypervisor层,因...","permalink":"/post/Docker 容器的底层实现（转载资料）","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[{"name":"Docker","slug":"Docker","count":7,"path":"api/categories/Docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}