{"title":"Docker 安装 Nexus3 docker仓库","uid":"dbfd3e1a17b7ff22880d08acb8468aa7","slug":"Docker 安装 Nexus3 docker仓库","date":"2019-09-10T03:30:54.000Z","updated":"2025-04-30T08:11:18.832Z","comments":true,"path":"api/articles/Docker 安装 Nexus3 docker仓库.json","keywords":null,"cover":[],"content":"<p>使用容器安装<code>Nexus3</code> 仓库，真的非常方便</p>\n<h1 id=\"下载镜像\"><a href=\"#下载镜像\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h1><p>nexus3 的镜像名称为 sonatype&#x2F;nexus3 我们直接用 docker 工具下载即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull sonatype/nexus3</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"运行镜像\"><a href=\"#运行镜像\" class=\"headerlink\" title=\"运行镜像\"></a>运行镜像</h1><p>注意这里需要开启后面docker仓库的端口，不然连不上，不知道为啥教程都没说</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8081:8081 -p 8082:8082 --name nexus3 sonatype/nexus3</span><br></pre></td></tr></table></figure>\n\n<p>可以使用logs看日志</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logs -f nexus3</span><br></pre></td></tr></table></figure>\n\n<p>显示到如图所示，即运行成功， 浏览器打开 <a href=\"http://localhost:8081/\">http://localhost:8081</a><br><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b2000093\" alt=\"title\"></p>\n<p>默认账号&#x2F;密码： <code>admin/admin123</code></p>\n<h1 id=\"创建-docker-仓库\"><a href=\"#创建-docker-仓库\" class=\"headerlink\" title=\"创建 docker 仓库\"></a>创建 docker 仓库</h1><p>登录后在<code>repositories - Create repository</code> 创建仓库，类型选择<code>docker(hosted)</code>, 名字随便取，主要是这个api端口一定要与映射的一致。</p>\n<p><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b200008f\" alt=\"title\"></p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p><strong>如不勾选兼容v1 API 将无法支持<code>docker search 127.0.0.1:8082/weiba</code> 搜索</strong></p>\n<h2 id=\"v2-API\"><a href=\"#v2-API\" class=\"headerlink\" title=\"v2 API\"></a><strong>v2 API</strong></h2><ul>\n<li><code>curl 127.0.0.1:8082/v2/_catalog</code> - 查看仓库镜像列表</li>\n<li><code>curl 127.0.0.1:8082/v2/ubuntu/tags/list</code> - 查看镜像tag列表</li>\n</ul>\n<h1 id=\"创建安全规则\"><a href=\"#创建安全规则\" class=\"headerlink\" title=\"创建安全规则\"></a>创建安全规则</h1><p>在 <code>security - Roles - Create role</code> ， 在<code>privlleges</code>上输入<code>docker</code>全选到右侧<br><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b2000096\" alt=\"title\"></p>\n<h1 id=\"创建账号\"><a href=\"#创建账号\" class=\"headerlink\" title=\"创建账号\"></a>创建账号</h1><p>在 <code>security - Users Create user</code> ， 在<code>available</code>中选择<code>docker</code></p>\n<h1 id=\"docker-登录仓库\"><a href=\"#docker-登录仓库\" class=\"headerlink\" title=\"docker 登录仓库\"></a>docker 登录仓库</h1><p>使用下面的命令登录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login 127.0.0.1:8082</span><br></pre></td></tr></table></figure>\n\n<p>登录一次后会保存密码，下次不用再输入。</p>\n<p>退出登录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logout</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"推送镜像到仓库\"><a href=\"#推送镜像到仓库\" class=\"headerlink\" title=\"推送镜像到仓库\"></a>推送镜像到仓库</h1><p>首先给镜像打标签</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker tag ubuntu:latest 127.0.0.1:8082/ubuntu:weiba   </span><br></pre></td></tr></table></figure>\n<p>看看是否存在：<br><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b2000092\" alt=\"title\"></p>\n<p>推送镜像：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push 127.0.0.1:8082/ubuntu</span><br></pre></td></tr></table></figure>\n<p><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b200008e\" alt=\"title\"></p>\n<p>删除本地镜像，再从本地仓库获取测试：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">weiba@weiba-PC:~$ sudo docker rmi -f 127.0.0.1:8082/ubuntu:weiba</span><br><span class=\"line\">Untagged: 127.0.0.1:8082/ubuntu:weiba</span><br><span class=\"line\">Untagged: 127.0.0.1:8082/ubuntu@sha256:acd85db6e4b18aafa7fcde5480872909bd8e6d5fbd4e5e790ecc09acc06a8b78</span><br><span class=\"line\">weiba@weiba-PC:~$ sudo docker rmi -f ubuntu:latest</span><br><span class=\"line\">Untagged: ubuntu:latest</span><br><span class=\"line\">Untagged: ubuntu@sha256:6d0e0c26489e33f5a6f0020edface2727db9489744ecc9b4f50c7fa671f23c49</span><br><span class=\"line\">Deleted: sha256:93fd78260bd1495afb484371928661f63e64be306b7ac48e2d13ce9422dfee26</span><br><span class=\"line\">Deleted: sha256:1c8cd755b52d6656df927bc8716ee0905853fada7ca200e4e6954bd010e792bb</span><br><span class=\"line\">Deleted: sha256:9203aabb0b583c3cf927d2caf6ba5b11124b0a23f8d19afadb7b071049c3cf26</span><br><span class=\"line\">Deleted: sha256:32f84095aed5a2e947b12a3813f019fc69f159cb5c7eae5dad69b2d98ffbeca4</span><br><span class=\"line\">Deleted: sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe</span><br></pre></td></tr></table></figure>\n<p><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b2000091\" alt=\"title\"></p>\n<p>从本地仓库下载镜像：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">weiba@weiba-PC:~$ sudo docker pull 127.0.0.1:8082/ubuntu:weiba</span><br><span class=\"line\">weiba: Pulling from ubuntu</span><br><span class=\"line\">32802c0cfa4d: Pull complete </span><br><span class=\"line\">da1315cffa03: Pull complete </span><br><span class=\"line\">fa83472a3562: Pull complete </span><br><span class=\"line\">f85999a86bef: Pull complete </span><br><span class=\"line\">Digest: sha256:acd85db6e4b18aafa7fcde5480872909bd8e6d5fbd4e5e790ecc09acc06a8b78</span><br><span class=\"line\">Status: Downloaded newer image for 127.0.0.1:8082/ubuntu:weiba</span><br></pre></td></tr></table></figure>\n<p>查看镜像列表：<br><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b2000094\" alt=\"title\"></p>\n<p>web端查看：<br><img src=\"leanote://file/getImage?fileId=5c18f2b875a1b808b2000095\" alt=\"title\"></p>\n<p>扩展资料：</p>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/fdb6f77401b6\">更改仓库镜像地址为阿里云</a></li>\n<li><a href=\"https://yeaheo.com/post/docker-nexus3-installation/\">持久化数据，优化配置</a></li>\n</ul>\n<h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><p>如果你不想使用 127.0.0.1:5000 作为仓库地址，比如想让本网段的其他主机也能把镜像推送到私有仓库。你就得把例如 192.168.199.100:5000 这样的内网地址作为私有仓库地址，这时你会发现无法成功推送镜像。</p>\n<p>这是因为 Docker 默认不允许非 HTTPS 方式推送镜像。我们可以通过 Docker 的配置选项来取消这个限制，或者查看下一节配置能够通过 HTTPS 访问的私有仓库。</p>\n<h2 id=\"Ubuntu-14-04-Debian-7-Wheezy\"><a href=\"#Ubuntu-14-04-Debian-7-Wheezy\" class=\"headerlink\" title=\"Ubuntu 14.04, Debian 7 Wheezy\"></a>Ubuntu 14.04, Debian 7 Wheezy</h2><p>对于使用 upstart 的系统而言，编辑 <code>/etc/default/docker</code> 文件，在其中的 DOCKER_OPTS 中增加如下内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DOCKER_OPTS=&quot;--registry-mirror=https://registry.docker-cn.com --insecure-registries=192.168.199.100:5000&quot;</span><br></pre></td></tr></table></figure>\n<p>重新启动服务。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Ubuntu-16-04-Debian-8-centos-7\"><a href=\"#Ubuntu-16-04-Debian-8-centos-7\" class=\"headerlink\" title=\"Ubuntu 16.04+, Debian 8+, centos 7\"></a>Ubuntu 16.04+, Debian 8+, centos 7</h2><p>对于使用 systemd 的系统，请在 <code>/etc/docker/daemon.json</code> 中写入如下内容（如果文件不存在请新建该文件）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirror&quot;: [</span><br><span class=\"line\">    &quot;https://registry.docker-cn.com&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;insecure-registries&quot;: [</span><br><span class=\"line\">    &quot;192.168.199.100:5000&quot;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：该文件必须符合 json 规范，否则 Docker 将不能启动。</strong></p>\n<h2 id=\"NGINX-加密代理\"><a href=\"#NGINX-加密代理\" class=\"headerlink\" title=\"NGINX 加密代理\"></a>NGINX 加密代理</h2><p>证书的生成请参见 私有仓库高级配置 里面证书生成一节。</p>\n<p>NGINX 示例配置如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream register</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    server &quot;YourHostName OR IP&quot;:5001; #端口为上面添加的私有镜像仓库是设置的 HTTP 选项的端口号</span><br><span class=\"line\">    check interval=3000 rise=2 fall=10 timeout=1000 type=http;</span><br><span class=\"line\">    check_http_send &quot;HEAD / HTTP/1.0\\r\\n\\r\\n&quot;;</span><br><span class=\"line\">    check_http_expect_alive http_4xx;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    server_name YourDomainName;#如果没有 DNS 服务器做解析，请删除此选项使用本机 IP 地址访问</span><br><span class=\"line\">    listen       443 ssl;</span><br><span class=\"line\"></span><br><span class=\"line\">    ssl_certificate key/example.crt;</span><br><span class=\"line\">    ssl_certificate_key key/example.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    ssl_session_timeout  5m;</span><br><span class=\"line\">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class=\"line\">    ssl_prefer_server_ciphers   on;</span><br><span class=\"line\">    large_client_header_buffers 4 32k;</span><br><span class=\"line\">    client_max_body_size 300m;</span><br><span class=\"line\">    client_body_buffer_size 512k;</span><br><span class=\"line\">    proxy_connect_timeout 600;</span><br><span class=\"line\">    proxy_read_timeout   600;</span><br><span class=\"line\">    proxy_send_timeout   600;</span><br><span class=\"line\">    proxy_buffer_size    128k;</span><br><span class=\"line\">    proxy_buffers       4 64k;</span><br><span class=\"line\">    proxy_busy_buffers_size 128k;</span><br><span class=\"line\">    proxy_temp_file_write_size 512k;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_set_header Host $host;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-Port $server_port;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">        proxy_http_version 1.1;</span><br><span class=\"line\">        proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">        proxy_set_header Connection $connection_upgrade;</span><br><span class=\"line\">        proxy_redirect off;</span><br><span class=\"line\">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">        proxy_pass http://register;</span><br><span class=\"line\">        proxy_read_timeout 900s;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-主机访问镜像仓库\"><a href=\"#Docker-主机访问镜像仓库\" class=\"headerlink\" title=\"Docker 主机访问镜像仓库\"></a>Docker 主机访问镜像仓库</h2><p>如果不启用 SSL 加密可以通过前面章节的方法添加信任地址到 Docker 的配置文件中然后重启 Docker</p>\n<p>使用 SSL 加密以后程序需要访问就不能采用修改配置的访问了。具体方法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ openssl s_client -showcerts -connect YourDomainName OR HostIP:443 &lt;/dev/null 2&gt;/dev/null|openssl x509 -outform PEM &gt;ca.crt</span><br><span class=\"line\">$ cat ca.crt | sudo tee -a /etc/ssl/certs/ca-certificates.crt</span><br><span class=\"line\">$ systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>docker login YourDomainName OR HostIP</code> 进行测试，用户名密码填写上面 Nexus 中生成的。</p>\n","text":"使用容器安装Nexus3 仓库，真的非常方便 下载镜像nexus3 的镜像名称为 sonatype/nexus3 我们直接用 docker 工具下载即可： 1d...","permalink":"/post/Docker 安装 Nexus3 docker仓库","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"Docker","slug":"Docker","count":7,"path":"api/categories/Docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"nexus3","slug":"nexus3","count":1,"path":"api/tags/nexus3.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">下载镜像</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">运行镜像</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-docker-%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">创建 docker 仓库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">注意</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#v2-API\"><span class=\"toc-text\">v2 API</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AE%89%E5%85%A8%E8%A7%84%E5%88%99\"><span class=\"toc-text\">创建安全规则</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%B4%A6%E5%8F%B7\"><span class=\"toc-text\">创建账号</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#docker-%E7%99%BB%E5%BD%95%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">docker 登录仓库</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E9%80%81%E9%95%9C%E5%83%8F%E5%88%B0%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">推送镜像到仓库</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ubuntu-14-04-Debian-7-Wheezy\"><span class=\"toc-text\">Ubuntu 14.04, Debian 7 Wheezy</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ubuntu-16-04-Debian-8-centos-7\"><span class=\"toc-text\">Ubuntu 16.04+, Debian 8+, centos 7</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NGINX-%E5%8A%A0%E5%AF%86%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">NGINX 加密代理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Docker-%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">Docker 主机访问镜像仓库</span></a></li></ol></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Chrome WebView Debug","uid":"d29e64cf6771700eaa47facdb4bd1625","slug":"Android-Chrome WebView Debug","date":"2019-09-10T05:45:38.000Z","updated":"2025-04-30T08:11:18.830Z","comments":true,"path":"api/articles/Android-Chrome WebView Debug.json","keywords":null,"cover":null,"text":"PC 端调试 Android Web View 注意事项~ 必须翻墙， 因为他需要连接Google的两个域名， 暂不知道是干什么的。 相关域名：chrome-d...","permalink":"/post/Android-Chrome WebView Debug","photos":[],"count_time":{"symbolsCount":248,"symbolsTime":"1 mins."},"categories":[{"name":"Android","slug":"Android","count":3,"path":"api/categories/Android.json"}],"tags":[{"name":"Chrome","slug":"Chrome","count":1,"path":"api/tags/Chrome.json"},{"name":"WebView","slug":"WebView","count":1,"path":"api/tags/WebView.json"},{"name":"Debug","slug":"Debug","count":1,"path":"api/tags/Debug.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"记一次 SpringBoot 项目内存不断上涨的问题解决过程","uid":"e204c405c9b2a43359c6fc61df69c066","slug":"记一次 SpringBoot 项目内存不断上涨的问题解决过程","date":"2019-08-30T05:22:51.000Z","updated":"2025-04-30T08:11:18.902Z","comments":true,"path":"api/articles/记一次 SpringBoot 项目内存不断上涨的问题解决过程.json","keywords":null,"cover":null,"text":" 最近刚使用上 opencv 做图像处理, 部署后发现每次调完业务代码 RES 都会上涨近 300M, 测试环境测了两天, RES 已经到 11G 了, 开始以...","permalink":"/post/记一次 SpringBoot 项目内存不断上涨的问题解决过程","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"经验","slug":"经验","count":7,"path":"api/tags/经验.json"},{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/tags/SpringBoot.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}