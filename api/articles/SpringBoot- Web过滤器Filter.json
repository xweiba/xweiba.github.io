{"title":"SpringBoot Web过滤器Filter","uid":"46e975c07ccd0222dca386e908b54400","slug":"SpringBoot- Web过滤器Filter","date":"2018-06-29T04:38:53.000Z","updated":"2025-04-30T08:11:18.865Z","comments":true,"path":"api/articles/SpringBoot- Web过滤器Filter.json","keywords":null,"cover":null,"content":"<h2 id=\"Spring-Boot-Web相关示例\"><a href=\"#Spring-Boot-Web相关示例\" class=\"headerlink\" title=\"Spring Boot Web相关示例\"></a>Spring Boot Web相关示例</h2><h3 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h3><p>tomcat 提供的过滤器 : RemoteIpFilter.</p>\n<p>[Spring Boot：定制servlet filters] <a href=\"https://www.ktanx.com/blog/p/4237\">https://www.ktanx.com/blog/p/4237</a></p>\n<h3 id=\"自定义配置-Property\"><a href=\"#自定义配置-Property\" class=\"headerlink\" title=\"自定义配置 Property\"></a>自定义配置 Property</h3><p>配置在application.properties中即可, Spring Boot默认都是读取该配置的. </p>\n<p><strong>设置自定义值</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">com.neo.username=测试</span><br><span class=\"line\">com.neo.age=34</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Component</span><br><span class=\"line\">public class User implements Serializable&#123;</span><br><span class=\"line\">    private static final long serialVersionUID = 8667468581448787106L;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Value(&quot;$&#123;com.neo.username&#125;&quot;)</span><br><span class=\"line\">    private String sUsername;</span><br><span class=\"line\">    @Value(&quot;$&#123;com.neo.age&#125;&quot;)</span><br><span class=\"line\">    private int iAge;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>log配置</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#window下这样的路径是直接再c盘下新建的</span><br><span class=\"line\">logging.path=/user/local/log</span><br><span class=\"line\">logging.level.com.favorites=DEBUG</span><br><span class=\"line\">logging.level.org.springframework.web=INFO</span><br><span class=\"line\">logging.level.org.hibernate=ERROR</span><br></pre></td></tr></table></figure>\n<p>path为本机的log地址，logging.level  后面可以根据包路径配置不同资源的log级别</p>\n<h3 id=\"数据库操作\"><a href=\"#数据库操作\" class=\"headerlink\" title=\"数据库操作\"></a>数据库操作</h3><p>在这里我重点讲述mysql、spring data jpa的使用，其中mysql 就不用说了大家很熟悉，jpa是利用Hibernate生成各种自动化的sql，如果只是简单的增删改查，基本上不用手写了，spring内部已经帮大家封装实现了。</p>\n<p>下面简单介绍一下如何在spring boot中使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 数据库连接配置</span><br><span class=\"line\">spring.datasource.url=jdbc:mysql://localhost:3306/test  </span><br><span class=\"line\">spring.datasource.data-username=test  </span><br><span class=\"line\">spring.datasource.data-password=test123456  </span><br><span class=\"line\">spring.datasource.driver-class-name=com.mysql.jdbc.Driver  </span><br><span class=\"line\"></span><br><span class=\"line\"># Spring date jpa</span><br><span class=\"line\">spring.jpa.properties.hibernate.hbm2ddl.auto=update  </span><br></pre></td></tr></table></figure>\n\n<p>hibernate.hbm2ddl.auto参数的作用主要用于：自动创建|更新|验证数据库表结构,有四个值：</p>\n<ul>\n<li><p>create： 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。</p>\n</li>\n<li><p>create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。</p>\n</li>\n<li><p>update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。</p>\n</li>\n<li><p>validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。</p>\n</li>\n</ul>\n","text":"Spring Boot Web相关示例过滤器tomcat 提供的过滤器 : RemoteIpFilter. [Spring Boot：定制servlet fil...","permalink":"/post/SpringBoot- Web过滤器Filter","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/tags/SpringBoot.json"},{"name":"过滤器","slug":"过滤器","count":1,"path":"api/tags/过滤器.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Spring-Boot-Web%E7%9B%B8%E5%85%B3%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">Spring Boot Web相关示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%87%E6%BB%A4%E5%99%A8\"><span class=\"toc-text\">过滤器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE-Property\"><span class=\"toc-text\">自定义配置 Property</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">数据库操作</span></a></li></ol></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"SpringBoot 整合 Dubbo","uid":"167e398dc9356c908cbd9b43da1d5230","slug":"SpringBoot 整合 Dubbo ","date":"2018-06-30T04:49:08.000Z","updated":"2025-04-30T08:11:18.865Z","comments":true,"path":"api/articles/SpringBoot 整合 Dubbo .json","keywords":null,"cover":[],"text":"今天完成的事Spring Boot 整合 Dubbo DubooDuboo 总结, 之前服务端一直无法找到服务提供者, 初步判断是包的兼容性问题, 每个版本示例...","permalink":"/post/SpringBoot 整合 Dubbo ","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/tags/SpringBoot.json"},{"name":"Dubbo","slug":"Dubbo","count":1,"path":"api/tags/Dubbo.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SpringBoot 浏览器自动刷新扩展","uid":"d501b5a3ec21ab2909c51ff01349c237","slug":"SpringBoot 浏览器自动刷新扩展","date":"2018-06-28T04:36:45.000Z","updated":"2025-04-30T08:11:18.865Z","comments":true,"path":"api/articles/SpringBoot 浏览器自动刷新扩展.json","keywords":null,"cover":null,"text":"chrome 安装 livereload 插件 spring boot 添加 devtools 依赖 并开启配置 spring.devtools.liverel...","permalink":"/post/SpringBoot 浏览器自动刷新扩展","photos":[],"count_time":{"symbolsCount":102,"symbolsTime":"1 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":12,"path":"api/tags/SpringBoot.json"},{"name":"浏览器","slug":"浏览器","count":1,"path":"api/tags/浏览器.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}