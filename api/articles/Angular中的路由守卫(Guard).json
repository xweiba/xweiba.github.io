{"title":"Angular中的路由守卫(Guard)","uid":"c54bc56e9a6984ec854ec855b661e852","slug":"Angular中的路由守卫(Guard)","date":"2020-11-23T05:55:16.000Z","updated":"2025-04-30T08:11:18.831Z","comments":true,"path":"api/articles/Angular中的路由守卫(Guard).json","keywords":null,"cover":null,"content":"<h2 id=\"11-路由守卫-Guard\"><a href=\"#11-路由守卫-Guard\" class=\"headerlink\" title=\"11.路由守卫-Guard\"></a><center>11.路由守卫-Guard<center></h2><h4 id=\"1-Guard\"><a href=\"#1-Guard\" class=\"headerlink\" title=\"1.Guard\"></a>1.Guard</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">有四种类型:</span><br><span class=\"line\">    1.canActivate: 控制是否允许进入路由</span><br><span class=\"line\">    2.canActivateChild: 等同于canActivate，只不过针对是所有子路由</span><br><span class=\"line\">    3.canDeactivate: 控制是否允许离开路由</span><br><span class=\"line\">    4.canLoad: 控制是否允许延迟加载整个模块</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>接口名</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>canActivate</td>\n<td>CanActivate</td>\n</tr>\n<tr>\n<td>canActivateChild</td>\n<td>CanActivateChild</td>\n</tr>\n<tr>\n<td>canDeactivate</td>\n<td>CanDeactivate<TComponent></td>\n</tr>\n<tr>\n<td>canLoad</td>\n<td>CanLoad</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>canDeactivate</code> 需要指明具体的组件类名以外，其他接口只是将首字母大写而已。假定需要一个某个角色才能访问某些路由，就需要一个 <code>CanActivate</code> 守卫类。</p></blockquote>\n<h4 id=\"2-如何使用\"><a href=\"#2-如何使用\" class=\"headerlink\" title=\"2. 如何使用\"></a>2. 如何使用</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; path: &#x27;auth&#x27;, component: GuardAuthComponent, canActivate: [ CanAuthProvide ] &#125;,</span><br><span class=\"line\">&#123; path: &#x27;admin&#x27;, loadChildren: &#x27;./admin/admin.module#AdminModule&#x27;, canLoad: [ CanAuthProvide ] &#125;</span><br></pre></td></tr></table></figure>","text":"11.路由守卫-Guard1.Guard123456有四种类型: 1.canActivate: 控制是否允许进入路由 2.canActivateChild: 等...","permalink":"/post/Angular中的路由守卫(Guard)","photos":[],"count_time":{"symbolsCount":628,"symbolsTime":"1 mins."},"categories":[{"name":"Angular","slug":"Angular","count":16,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":16,"path":"api/tags/Angular.json"},{"name":"Guard","slug":"Guard","count":1,"path":"api/tags/Guard.json"},{"name":"路由守卫","slug":"路由守卫","count":1,"path":"api/tags/路由守卫.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB-Guard\"><span class=\"toc-text\">11.路由守卫-Guard</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-Guard\"><span class=\"toc-text\">1.Guard</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2. 如何使用</span></a></li></ol></li></ol></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Angular中的打包部署","uid":"d4364c984cc79dd6b4a34500dd5c7bd3","slug":"Angular中的打包部署","date":"2020-11-23T05:55:58.000Z","updated":"2025-04-30T08:11:18.830Z","comments":true,"path":"api/articles/Angular中的打包部署.json","keywords":null,"cover":null,"text":"13.Angular中的打包部署1.打包指令12345ng build --base-href xx --prod--base-href:指定在生成和识别URL...","permalink":"/post/Angular中的打包部署","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Angular","slug":"Angular","count":16,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":16,"path":"api/tags/Angular.json"},{"name":"打包","slug":"打包","count":1,"path":"api/tags/打包.json"},{"name":"部署","slug":"部署","count":1,"path":"api/tags/部署.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Angular中的拦截器","uid":"ec5c1cad41982d5d9681c6467b72a951","slug":"Angular中的拦截器","date":"2020-11-23T05:54:32.000Z","updated":"2025-04-30T08:11:18.830Z","comments":true,"path":"api/articles/Angular中的拦截器.json","keywords":null,"cover":null,"text":"10.Angular中的拦截器1. 拦截器12345678910111213141516171819202122232425261.需要实现HttpInterc...","permalink":"/post/Angular中的拦截器","photos":[],"count_time":{"symbolsCount":713,"symbolsTime":"1 mins."},"categories":[{"name":"Angular","slug":"Angular","count":16,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":16,"path":"api/tags/Angular.json"},{"name":"拦截器","slug":"拦截器","count":1,"path":"api/tags/拦截器.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}