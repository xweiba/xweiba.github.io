{"title":"注册中心服务真实IP获取脚本","uid":"b6c44ddff928c2bc54e5fe634d621a85","slug":"注册中心服务真实IP获取脚本","date":"2022-12-26T05:58:09.000Z","updated":"2025-04-30T08:11:18.902Z","comments":true,"path":"api/articles/注册中心服务真实IP获取脚本.json","keywords":null,"cover":null,"content":"<p>由于部分同事在测试环境启服务时常常不改服务名称且ip直接配置成localhost，导致很多服务调用时会连接异常，但又找不到人，为此我写了一个脚本来定位服务的真实ip。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/bin:/sbin:/usr/sbin</span></span><br><span class=\"line\"></span><br><span class=\"line\">if [ ! -n &quot;$1&quot; -o ! -n &quot;$2&quot; ]; then</span><br><span class=\"line\">    echo &quot;请在脚本后输入参数：注册中心端口号 目标服务端口号&quot;</span><br><span class=\"line\">    exit 1</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">PID=$(netstat -tunlp | grep $1 | grep java | awk &#x27;&#123;print $7&#125;&#x27; | awk -F &#x27;/&#x27; &#x27;&#123;print $1&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;端口$1所属进程PID为：$&#123;PID&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">ips=$(lsof -p $&#123;PID&#125;  -nP | grep TCP | awk &#x27;&#123;print $9&#125;&#x27; | awk -F &#x27;-&gt;&#x27; &#x27;&#123;print $2&#125;&#x27; | awk -F &#x27;:&#x27; &#x27;&#123;print $1&#125;&#x27; | grep -v &#x27;^$&#x27; | sort | uniq)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in $&#123;ips&#125;; do</span><br><span class=\"line\"> nc -z -w 2 $&#123;i&#125; $2 &gt;&gt; /dev/null 2&gt;&amp;1</span><br><span class=\"line\"> result=$?</span><br><span class=\"line\"> if [ $&#123;result&#125; != 0 ]; then</span><br><span class=\"line\">        echo -e &quot;$&#123;i&#125;:$2 \\t 端口关闭&quot;</span><br><span class=\"line\"> else   </span><br><span class=\"line\">        swagger=&quot;http://$&#123;i&#125;:$2/swagger-ui.html&quot;</span><br><span class=\"line\">        cr=$(curl -I -m 10 -o /dev/null -s -w %&#123;http_code&#125; $&#123;swagger&#125;)</span><br><span class=\"line\">        if [ $&#123;cr&#125; != 200 ]; then</span><br><span class=\"line\">           desUrl=&quot;manager - http://$&#123;i&#125;:$2/&quot;</span><br><span class=\"line\">        else </span><br><span class=\"line\">           desUrl=&quot;microservice - $&#123;swagger&#125;&quot;</span><br><span class=\"line\">        fi</span><br><span class=\"line\">        echo -e &quot;$&#123;i&#125;:$2 \\t 端口开放 &lt;-- $&#123;desUrl&#125;&quot;</span><br><span class=\"line\"> fi</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n","text":"由于部分同事在测试环境启服务时常常不改服务名称且ip直接配置成localhost，导致很多服务调用时会连接异常，但又找不到人，为此我写了一个脚本来定位服务的真实...","permalink":"/post/注册中心服务真实IP获取脚本","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Shell","slug":"Shell","count":2,"path":"api/categories/Shell.json"}],"tags":[{"name":"Shell","slug":"Shell","count":5,"path":"api/tags/Shell.json"}],"toc":"","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"JVM类加载机制","uid":"696f58cc973f75c60837976660da7ceb","slug":"JVM类加载机制","date":"2022-12-29T05:17:00.000Z","updated":"2025-04-30T08:11:18.849Z","comments":true,"path":"api/articles/JVM类加载机制.json","keywords":null,"cover":[],"text":"类加载全过程当我们使用Java命令启动一个类的main()方法时，首先需要通过类加载器将主类加载到JVM中。 1234567891011121314151617...","permalink":"/post/JVM类加载机制","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"JVM","slug":"JVM","count":1,"path":"api/categories/JVM.json"}],"tags":[{"name":"原理","slug":"原理","count":1,"path":"api/tags/原理.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Docker-创建Hexo环境","uid":"0cc92406a47f2ec432fad59606c76747","slug":"Docker-创建Hexo环境","date":"2022-12-23T15:14:30.000Z","updated":"2025-04-30T08:11:18.833Z","comments":true,"path":"api/articles/Docker-创建Hexo环境.json","keywords":null,"cover":[],"text":" GitHub 访问速度不佳, 在Nas上部署一套Hexo 编写DockerFile本来是打算看看有没有合适的镜像的, 不是太大, 就是配置太麻烦, 干脆自己自...","permalink":"/post/Docker-创建Hexo环境","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Docker","slug":"Docker","count":7,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":3,"path":"api/tags/Docker.json"},{"name":"Hexo","slug":"Hexo","count":5,"path":"api/tags/Hexo.json"},{"name":"nodejs","slug":"nodejs","count":1,"path":"api/tags/nodejs.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}