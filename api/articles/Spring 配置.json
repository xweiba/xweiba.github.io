{"title":"Spring配置","uid":"eaa00d865cbf6795dd0a46e06ef96cc9","slug":"Spring 配置","date":"2017-05-23T04:46:18.000Z","updated":"2025-04-30T08:11:18.863Z","comments":true,"path":"api/articles/Spring 配置.json","keywords":null,"cover":null,"content":"<h2 id=\"的-id-和-name-属性区别\"><a href=\"#的-id-和-name-属性区别\" class=\"headerlink\" title=\"的 id 和 name 属性区别\"></a><bean>的 id 和 name 属性区别</h2><ul>\n<li>配置一个bean的时候，我们可以不设置id，也可以不设置name，spring默认会使用类的全限定名作为bean的标识符。<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;net.aty.spring.ioc.first.C1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span> </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 没有设置id,也没有设置name, 默认用类的全限定名  </span></span><br><span class=\"line\"><span class=\"type\">boolean</span> <span class=\"variable\">same</span> <span class=\"operator\">=</span> ctx.getBean(C1.class) == ctx.getBean(C1.class  </span><br><span class=\"line\">        .getCanonicalName());  </span><br><span class=\"line\">System.out.println(same);<span class=\"comment\">//true  </span></span><br></pre></td></tr></table></figure></li>\n<li>如果使用id属性来设置bean的标识符，那么id在spring容器中必需唯一。</li>\n<li>如果使用name属性来设置，那么设置的其实就是bean的标识符，必需在容器中唯一。<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;c1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;net.aty.spring.ioc.first.C1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ClassPathXmlApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(  </span><br><span class=\"line\">        <span class=\"string\">&quot;first-spring.xml&quot;</span>);  </span><br><span class=\"line\">System.out.println(ctx.getBean(<span class=\"string\">&quot;c1&quot;</span>,C1.class));  </span><br><span class=\"line\">ctx.close();  </span><br></pre></td></tr></table></figure></li>\n<li>如果同时设置id和name，那么id设置的是标识符，name设置的是别名。<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;cid&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;alias1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;net.aty.spring.ioc.first.C1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ClassPathXmlApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(  </span><br><span class=\"line\">        <span class=\"string\">&quot;first-spring.xml&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">String[] alias = ctx.getAliases(<span class=\"string\">&quot;cid&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> (String e : alias) &#123;  </span><br><span class=\"line\">    System.out.println(e);<span class=\"comment\">//alias1  </span></span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">ctx.close(); </span><br></pre></td></tr></table></figure></li>\n<li>如果id和name的值相同，那么spring容器会自动检测并消除冲突：让这个bean只有标识符，而没有别名。<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;cid&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;cid&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;net.aty.spring.ioc.first.C1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ClassPathXmlApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(  </span><br><span class=\"line\">        <span class=\"string\">&quot;first-spring.xml&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">String[] alias = ctx.getAliases(<span class=\"string\">&quot;cid&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">System.out.println(alias.length);<span class=\"comment\">//0  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">ctx.close();  </span><br></pre></td></tr></table></figure></li>\n<li>name属性设置多个值。不设置id，那么第一个被用作标识符，其他的被视为别名。如果设置了id，那么name的所有值都是别名。<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;a1,a2,a3&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;net.aty.spring.ioc.first.C1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ClassPathXmlApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(  </span><br><span class=\"line\">        <span class=\"string\">&quot;first-spring.xml&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">String[] alias = ctx.getAliases(<span class=\"string\">&quot;a1&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">System.out.println(Arrays.toString(alias));<span class=\"comment\">//[a2, a3]  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">ctx.close();  </span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"注意：不管是标识符，还是别名，在容器中必需唯一。因为标识符和别名，都是可以用来获取bean的，如果不唯一，显然不知道获取的到底是哪儿一个bean。\"><a href=\"#注意：不管是标识符，还是别名，在容器中必需唯一。因为标识符和别名，都是可以用来获取bean的，如果不唯一，显然不知道获取的到底是哪儿一个bean。\" class=\"headerlink\" title=\"注意：不管是标识符，还是别名，在容器中必需唯一。因为标识符和别名，都是可以用来获取bean的，如果不唯一，显然不知道获取的到底是哪儿一个bean。\"></a>注意：不管是标识符，还是别名，在容器中必需唯一。因为标识符和别名，都是可以用来获取bean的，如果不唯一，显然不知道获取的到底是哪儿一个bean。</h4><ul>\n<li>使用<alias>标签指定别名，别名也必须在IoC容器中唯一。<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;c1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;net.aty.spring.ioc.first.C1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">alias</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;c1&quot;</span> <span class=\"attr\">alias</span>=<span class=\"string\">&quot;1&quot;</span>/&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">alias</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;c1&quot;</span> <span class=\"attr\">alias</span>=<span class=\"string\">&quot;2&quot;</span>/&gt;</span>  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ClassPathXmlApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(  </span><br><span class=\"line\">        <span class=\"string\">&quot;first-spring.xml&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">String[] alias = ctx.getAliases(<span class=\"string\">&quot;c1&quot;</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">System.out.println(Arrays.toString(alias));<span class=\"comment\">//[1,2]  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">ctx.close(); </span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"总结-标识符和别名没有任何区别，所以id和name属性唯一的差别在于：id只能设置一个标识符，而name可以设置多个标识符\"><a href=\"#总结-标识符和别名没有任何区别，所以id和name属性唯一的差别在于：id只能设置一个标识符，而name可以设置多个标识符\" class=\"headerlink\" title=\"总结: 标识符和别名没有任何区别，所以id和name属性唯一的差别在于：id只能设置一个标识符，而name可以设置多个标识符\"></a>总结: 标识符和别名没有任何区别，所以id和name属性唯一的差别在于：id只能设置一个标识符，而name可以设置多个标识符</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;c1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;net.aty.spring.ioc.first.C1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">alias</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;c1&quot;</span> <span class=\"attr\">alias</span>=<span class=\"string\">&quot;1&quot;</span>/&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">alias</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;c1&quot;</span> <span class=\"attr\">alias</span>=<span class=\"string\">&quot;2&quot;</span>/&gt;</span>  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(Arrays.toString(ctx.getAliases(<span class=\"string\">&quot;c1&quot;</span>)));<span class=\"comment\">//[1,2]  </span></span><br><span class=\"line\">System.out.println(Arrays.toString(ctx.getAliases(<span class=\"string\">&quot;1&quot;</span>)));<span class=\"comment\">//[c1,2]  </span></span><br><span class=\"line\">System.out.println(Arrays.toString(ctx.getAliases(<span class=\"string\">&quot;2&quot;</span>)));<span class=\"comment\">//[c1,1]  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">System.out.println(ctx.getBean(<span class=\"string\">&quot;c1&quot;</span>) == ctx.getBean(<span class=\"string\">&quot;1&quot;</span>));<span class=\"comment\">//true  </span></span><br><span class=\"line\">System.out.println(ctx.getBean(<span class=\"string\">&quot;c1&quot;</span>) == ctx.getBean(<span class=\"string\">&quot;2&quot;</span>));<span class=\"comment\">//true  </span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置静态资源后出现异常\"><a href=\"#配置静态资源后出现异常\" class=\"headerlink\" title=\"配置静态资源后出现异常\"></a>配置静态资源后出现异常</h2><ol>\n<li>异常信息<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> Failed to convert from type [java.util.ArrayList<?>] to type [java.util.List<org.springframework.core.io.Resource>] for value '[/WEB-INF/static/]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.ArrayList<?>] to type [org.springframework.core.io.Resource]</p></blockquote>\n</li>\n<li>原因<ul>\n<li>bean id冲突</li>\n<li>同时配置了静态资源 <code>&lt;mvc:resources&gt;</code> 其默认bean id为 <code>conversionService</code>  </li>\n<li>spring自动参数绑定并且其bian id为 <code>&lt;bean id=&quot;conversionServiceCustom&quot;&gt;</code>.</li>\n</ul>\n</li>\n</ol>\n","text":"的 id 和 name 属性区别 配置一个bean的时候，我们可以不设置id，也可以不设置name，spring默认会使用类的全限定名作为bean的标识符。1<...","permalink":"/post/Spring 配置","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Spring","slug":"Spring","count":7,"path":"api/categories/Spring.json"}],"tags":[{"name":"配置","slug":"配置","count":8,"path":"api/tags/配置.json"},{"name":"Spring","slug":"Spring","count":8,"path":"api/tags/Spring.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9A%84-id-%E5%92%8C-name-%E5%B1%9E%E6%80%A7%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">的 id 和 name 属性区别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%EF%BC%9A%E4%B8%8D%E7%AE%A1%E6%98%AF%E6%A0%87%E8%AF%86%E7%AC%A6%EF%BC%8C%E8%BF%98%E6%98%AF%E5%88%AB%E5%90%8D%EF%BC%8C%E5%9C%A8%E5%AE%B9%E5%99%A8%E4%B8%AD%E5%BF%85%E9%9C%80%E5%94%AF%E4%B8%80%E3%80%82%E5%9B%A0%E4%B8%BA%E6%A0%87%E8%AF%86%E7%AC%A6%E5%92%8C%E5%88%AB%E5%90%8D%EF%BC%8C%E9%83%BD%E6%98%AF%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E8%8E%B7%E5%8F%96bean%E7%9A%84%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%94%AF%E4%B8%80%EF%BC%8C%E6%98%BE%E7%84%B6%E4%B8%8D%E7%9F%A5%E9%81%93%E8%8E%B7%E5%8F%96%E7%9A%84%E5%88%B0%E5%BA%95%E6%98%AF%E5%93%AA%E5%84%BF%E4%B8%80%E4%B8%AAbean%E3%80%82\"><span class=\"toc-text\">注意：不管是标识符，还是别名，在容器中必需唯一。因为标识符和别名，都是可以用来获取bean的，如果不唯一，显然不知道获取的到底是哪儿一个bean。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-%E6%A0%87%E8%AF%86%E7%AC%A6%E5%92%8C%E5%88%AB%E5%90%8D%E6%B2%A1%E6%9C%89%E4%BB%BB%E4%BD%95%E5%8C%BA%E5%88%AB%EF%BC%8C%E6%89%80%E4%BB%A5id%E5%92%8Cname%E5%B1%9E%E6%80%A7%E5%94%AF%E4%B8%80%E7%9A%84%E5%B7%AE%E5%88%AB%E5%9C%A8%E4%BA%8E%EF%BC%9Aid%E5%8F%AA%E8%83%BD%E8%AE%BE%E7%BD%AE%E4%B8%80%E4%B8%AA%E6%A0%87%E8%AF%86%E7%AC%A6%EF%BC%8C%E8%80%8Cname%E5%8F%AF%E4%BB%A5%E8%AE%BE%E7%BD%AE%E5%A4%9A%E4%B8%AA%E6%A0%87%E8%AF%86%E7%AC%A6\"><span class=\"toc-text\">总结: 标识符和别名没有任何区别，所以id和name属性唯一的差别在于：id只能设置一个标识符，而name可以设置多个标识符</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%90%8E%E5%87%BA%E7%8E%B0%E5%BC%82%E5%B8%B8\"><span class=\"toc-text\">配置静态资源后出现异常</span></a></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Spring 添加Redis支持","uid":"df45be00e9070baa034fc74ef3a965fd","slug":"Spring 添加Redis支持","date":"2017-05-26T04:44:58.000Z","updated":"2025-04-30T08:11:18.863Z","comments":true,"path":"api/articles/Spring 添加Redis支持.json","keywords":null,"cover":null,"text":"Maven 包1234567891011121314<!-- redis --> <!-- redis 驱动--> <dependency> <groupId>...","permalink":"/post/Spring 添加Redis支持","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"Spring","slug":"Spring","count":7,"path":"api/categories/Spring.json"}],"tags":[{"name":"Redis","slug":"Redis","count":5,"path":"api/tags/Redis.json"},{"name":"Spring","slug":"Spring","count":8,"path":"api/tags/Spring.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}