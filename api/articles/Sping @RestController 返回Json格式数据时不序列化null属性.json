{"title":"Sping @RestController 返回Json格式数据时不序列化null属性","uid":"7625e53cbd55975ec0a2b49c3c2bb1f3","slug":"Sping @RestController 返回Json格式数据时不序列化null属性","date":"2018-07-26T09:39:57.000Z","updated":"2025-04-30T08:11:18.862Z","comments":true,"path":"api/articles/Sping @RestController 返回Json格式数据时不序列化null属性.json","keywords":null,"cover":null,"content":"<h1 id=\"直接看代码\"><a href=\"#直接看代码\" class=\"headerlink\" title=\"直接看代码\"></a>直接看代码</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @program: canary</span><br><span class=\"line\"> * @description: spring 内置的json处理框架是Jackson。我们可以对它配置达到不返回Null属性的json数据</span><br><span class=\"line\"> * @author: wb</span><br><span class=\"line\"> * @create: 2018-07-26 17:39</span><br><span class=\"line\"> **/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">public class JacksonConfig</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    @Bean</span><br><span class=\"line\">    @Primary</span><br><span class=\"line\">    @ConditionalOnMissingBean(ObjectMapper.class)</span><br><span class=\"line\">    public ObjectMapper jacksonObjectMapper(Jackson2ObjectMapperBuilder builder)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ObjectMapper objectMapper = builder.createXmlMapper(false).build();</span><br><span class=\"line\"></span><br><span class=\"line\">        // 通过该方法对mapper对象进行设置，所有序列化的对象都将按改规则进行系列化</span><br><span class=\"line\">        // Include.Include.ALWAYS 默认</span><br><span class=\"line\">        // Include.NON_DEFAULT 属性为默认值不序列化</span><br><span class=\"line\">        // Include.NON_EMPTY 属性为 空（&quot;&quot;） 或者为 NULL 都不序列化，则返回的json是没有这个字段的。这样对移动端会更省流量</span><br><span class=\"line\">        // Include.NON_NULL 属性为NULL 不序列化,就是为null的字段不参加序列化</span><br><span class=\"line\">        //objectMapper.setSerializationInclusion(Include.NON_EMPTY);</span><br><span class=\"line\"></span><br><span class=\"line\">        /* 为空的不参加序列化 */</span><br><span class=\"line\">        objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);</span><br><span class=\"line\">        // 字段保留，将null值转为&quot;&quot;</span><br><span class=\"line\">        /*objectMapper.getSerializerProvider().setNullValueSerializer(new JsonSerializer&lt;Object&gt;()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void serialize(Object o, JsonGenerator jsonGenerator,</span><br><span class=\"line\">                                  SerializerProvider serializerProvider)</span><br><span class=\"line\">                    throws IOException, JsonProcessingException</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                jsonGenerator.writeString(&quot;&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);*/</span><br><span class=\"line\">        return objectMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","text":"直接看代码1234567891011121314151617181920212223242526272829303132333435363738394041/*...","permalink":"/post/Sping @RestController 返回Json格式数据时不序列化null属性","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Spring","slug":"Spring","count":7,"path":"api/categories/Spring.json"}],"tags":[{"name":"Spring","slug":"Spring","count":8,"path":"api/tags/Spring.json"},{"name":"Json序列化","slug":"Json序列化","count":1,"path":"api/tags/Json序列化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E7%9C%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">直接看代码</span></a></li></ol>","author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Memcached","uid":"ea02254a039ac79c314d2c9af30af5fa","slug":"Memcached","date":"2018-08-14T05:35:23.000Z","updated":"2025-04-30T08:11:18.862Z","comments":true,"path":"api/articles/Memcached.json","keywords":null,"cover":null,"text":"安装准备 Linux系统安装memcached，首先要先安装libevent库。 Ubuntu/Debian: sudo apt-get install lib...","permalink":"/post/Memcached","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Memcached","slug":"Memcached","count":2,"path":"api/categories/Memcached.json"}],"tags":[{"name":"Memcached","slug":"Memcached","count":1,"path":"api/tags/Memcached.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"通过 Memcached 解决多台tomcat session同步问题","uid":"5a722539163216f9e12fecfef2d10901","slug":"通过 Memcached 解决多台tomcat session同步问题","date":"2018-07-26T05:34:36.000Z","updated":"2025-04-30T08:11:18.902Z","comments":true,"path":"api/articles/通过 Memcached 解决多台tomcat session同步问题.json","keywords":null,"cover":null,"text":"准备工作 Nginx 负载均衡已配置 Tomcat 已开启多个容器 Tomcat 8 官方文档: https://github.com/magro/memcac...","permalink":"/post/通过 Memcached 解决多台tomcat session同步问题","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Memcached","slug":"Memcached","count":2,"path":"api/categories/Memcached.json"}],"tags":[{"name":"session","slug":"session","count":1,"path":"api/tags/session.json"},{"name":"tomcat","slug":"tomcat","count":1,"path":"api/tags/tomcat.json"}],"author":{"name":"Weiba","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/24520686?v=4","link":"/","description":"啊 又忘了更新了！","socials":{"github":"https://github.com/xweiba","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}